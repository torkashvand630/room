@using pRoom.Models.eventModel;
@model pRoom.Models.eventModel.editRoomVM
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>


</head>
<div style="margin: 10px" class="form-group">
    <a onclick="send()" class="btn btn-primary"> @Translate.t.save</a>
    <a class="btn btn-danger" asp-action="Index"> @Translate.t.Cancel</a>
</div>
<div style="margin-bottom:15px;">
    <div>
        <p style="color: red;font-weight: bold;" id="errMessage"></p>
    </div>

</div>
<div class="row">
    <div class="col-md-4">
        @*<form asp-action="Edit">*@
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @*<input type="hidden" asp-for="id" />*@
        @Html.AntiForgeryToken()
        <div class="form-group">
            <label class="control-label">@Translate.t.name </label>
            <input id="name" value="@Model.name" type="text" class="form-control" />

        </div>

        <div class="form-group">
            <label class="control-label">@Translate.t.Description</label>
            <textarea name="description" id="description" style="width:400px;height:150px;max-width:90%;"> @Model.description</textarea>

        </div>

        <div class="form-group">
            <label class="control-label"></label>
            <p>@Translate.t.password</p>
            <input id="password" placeholder="@Translate.t.password" value="@Model.password" class="form-control" />

        </div>
        <div>
            <div class="form-group">
                <label class="control-label"> @Translate.t.duration -  @Translate.t.Minutes  </label>
                <input class="form-control" type="number" data-val="true" placeholder="90" data-val-required="" id="duration" name="userCount" value="@Model.duration">
            </div>
        </div>

        @*</form>*@
    </div>
</div>





@{
    var sStyle = "none";
    if (appInfo.lang == "fa")
    {
        sStyle = "block";

    }

}
<div style="padding:15px;display:@sStyle;">
    <div class="form-group">
        <label class="control-label" for="password"> انتخاب تاریخ و زمان شروع کلاس </label>
        <label class="sr-only" for="exampleInput1">تاریخ و زمان</label>
        <div class="input-group">
            <div style="background-color:green;" class="input-group-addon" data-placement="left" data-mddatetimepicker="true" data-targetselector="#exampleInput1" data-trigger="click" data-enabletimepicker="true" data-mdpersiandatetimepicker="" data-mdformat="yyyy/MM/dd HH:mm:ss" data-isline="false" data-mdpersiandatetimepickerselecteddatetime="{&quot;Year&quot;:1398,&quot;Month&quot;:12,&quot;Day&quot;:14,&quot;Hour&quot;:13,&quot;Minute&quot;:16,&quot;Second&quot;:13}" style="cursor: pointer;" data-original-title="" title="" data-mdpersiandatetimepickershowing="false">
                <span>انتخاب </span>
            </div>
            <input style="max-width:80%;width:200px;" type="text" value="@Model.startTime" class="form-control" id="exampleInput1" placeholder="تاریخ به همراه زمان">
        </div>
    </div>
</div>
<script>

</script>


<div style="margin: 10px" class="form-group">
    <a onclick="send()" class="btn btn-primary"> @Translate.t.save</a>
    <a class="btn btn-danger" asp-action="Index"> @Translate.t.Cancel</a>
</div>
<div>

</div>




<script>

    function startTimeClick(valeu) {
        activeTime = valeu;
        try {
            activeOBJ.className = "btn btn-success";
        } catch (e) {
            console.log(e);
        }

        activeOBJ = document.getElementById("btn_" + valeu);
        console.log(activeOBJ);
        activeOBJ.className = "btn btn-danger";
    }

    function send() {
        var id =@Model.id;


        var activeTime = document.getElementById('exampleInput1').value;
        if (activeTime == null || activeTime == undefined || activeTime == "") {
            activeTime = "";
        }
         if ("@appInfo.lang" != "fa") activeTime = "";
        console.log(activeTime);

        var duration = document.getElementById('duration').value;
        if (duration == null || duration == undefined || duration == "") duration = 80;
        else duration = parseInt(duration);
        var name = document.getElementById("name").value;
        if (name == "" || name == null)
        {
                document.getElementById("errMessage").innerText ="@Html.Raw(Translate.t.front_create_emptyName)" ;
                return;
            }
            var description = document.getElementById("description").value;
            var password = document.getElementById("password").value;
            if (password == '') {
                document.getElementById("errMessage").innerText ="@Html.Raw(Translate.t.front_create_emptyPassword)" ;

                return;
            }
        $.ajax({
            url: "/room/edit",
            type: "POST",
            data: JSON.stringify({ id: id, name: name, password: password, description: description, startTime: activeTime, duration: duration }),
            dataType: "json",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            async: true,
            contentType: "application/json",
            success: function (data) {
                window.location = "/room/";
                console.log(data);
            },
            complete: function (data) {
                console.log(data);
                window.location = "/room/";

            }

        });
    }
</script>

